{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleks\\\\Downloads\\\\lab2-frontend\\\\src\\\\components\\\\Books\\\\BooksEdit\\\\bookEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookEdit = props => {\n  _s();\n\n  const history = useHistory();\n  const [formData, updateFormData] = React.useState({\n    name: \"\",\n    category: \"DRAMA\",\n    author: 1,\n    availableCopies: 1\n  });\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const category = formData.category !== 0 ? formData.category : props.book.category;\n    const author = formData.author !== 0 ? formData.author : props.book.author.id;\n    const name = formData.name !== \"\" ? formData.name : props.book.name;\n    const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.book.availableCopies;\n    props.onEditBook(props.book.id, name, category, author, availableCopies);\n    history.push(\"/books\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-left\",\n      children: \"Edit book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Book name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"name\",\n            name: \"name\",\n            placeholder: props.book.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"author\",\n            className: \"form-control\",\n            onChange: handleChange,\n            children: props.authors.map(term => {\n              if (props.book.author !== undefined && props.book.author.id === term.id) return /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: props.book.author.id,\n                value: term.id,\n                children: term.name + \" \" + term.surname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 44\n              }, this);else return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.id,\n                children: term.name + \" \" + term.surname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            className: \"form-control\",\n            onChange: handleChange,\n            children: props.categories.map(term => {\n              if (props.book.category !== undefined && props.book.category === term) return /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: props.book.category,\n                value: term,\n                children: term\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 44\n              }, this);else return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term,\n                children: term\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Available Copies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"availableCopies\",\n            name: \"availableCopies\",\n            placeholder: props.book.availableCopies,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"submit\",\n            type: \"submit\",\n            className: \"btn btn-block btn-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookEdit, \"j8/ymBHLcu5g5Hm+sRVz19/9MOw=\", false, function () {\n  return [useHistory];\n});\n\n_c = BookEdit;\nexport default BookEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookEdit\");","map":{"version":3,"sources":["C:/Users/aleks/Downloads/lab2-frontend/src/components/Books/BooksEdit/bookEdit.js"],"names":["React","useHistory","BookEdit","props","history","formData","updateFormData","useState","name","category","author","availableCopies","handleChange","e","target","value","trim","onFormSubmit","preventDefault","book","id","onEditBook","push","authors","map","term","undefined","surname","categories"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst BookEdit = (props) => {\r\n\r\n    const history = useHistory();\r\n    const [formData, updateFormData] = React.useState({\r\n        name:\"\",\r\n        category:\"DRAMA\",\r\n        author:1,\r\n        availableCopies:1\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        updateFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value.trim()\r\n        })\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        const category = formData.category !== 0 ? formData.category : props.book.category;\r\n        const author = formData.author !== 0 ? formData.author : props.book.author.id;\r\n\r\n        const name = formData.name !== \"\" ? formData.name : props.book.name;\r\n        const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.book.availableCopies;\r\n\r\n        props.onEditBook(props.book.id, name, category, author, availableCopies);\r\n        history.push(\"/books\");\r\n    }\r\n\r\n    return(\r\n        <div className={\"container\"}>\r\n            <hr/>\r\n            <h1 className={\"text-left\"}>Edit book</h1>\r\n            <hr/>\r\n            <div>\r\n                <form onSubmit={onFormSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Book name</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               id=\"name\"\r\n                               name=\"name\"\r\n                               placeholder={props.book.name}\r\n                               onChange={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Author</label>\r\n                        <select name=\"author\" className=\"form-control\" onChange={handleChange}>\r\n                            {props.authors.map((term) => {\r\n                                if(props.book.author !== undefined &&\r\n                                    props.book.author.id === term.id)\r\n                                    return <option selected={props.book.author.id} value={term.id}>{term.name+\" \"+term.surname}</option>\r\n                                else return <option value={term.id}>{term.name+\" \"+term.surname}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Category</label>\r\n                        <select name=\"category\" className=\"form-control\" onChange={handleChange}>\r\n                            {props.categories.map((term) => {\r\n                                if(props.book.category !== undefined &&\r\n                                    props.book.category === term)\r\n                                    return <option selected={props.book.category} value={term}>{term}</option>\r\n                                else return <option value={term}>{term}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"price\">Available Copies</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               id=\"availableCopies\"\r\n                               name=\"availableCopies\"\r\n                               placeholder={props.book.availableCopies}\r\n                               onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className={\"text-center\"}><button id=\"submit\" type=\"submit\" className=\"btn btn-block btn-primary\">Submit</button></div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BookEdit;"]},"metadata":{},"sourceType":"module"}