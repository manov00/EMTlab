{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleks\\\\Downloads\\\\lab2-frontend\\\\src\\\\components\\\\App\\\\App.js\";\nimport './App.css';\nimport React, { Component } from \"react\";\nimport Repository from \"../../repository/repository\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport Header from '../Header/header';\nimport Authors from '../Authors/authors';\nimport Countries from '../Countries/countries';\nimport Books from '../Books/BooksList/books';\nimport BookAdd from \"../Books/BooksAdd/bookAdd\";\nimport BookEdit from \"../Books/BooksEdit/bookEdit\";\nimport Categories from \"../Categories/categories\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBooks = () => {\n      Repository.fetchBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadAuthors = () => {\n      Repository.fetchAuthors().then(data => {\n        this.setState({\n          authors: data.data\n        });\n      });\n    };\n\n    this.loadCountries = () => {\n      Repository.fetchCountries().then(data => {\n        this.setState({\n          countries: data.data\n        });\n      });\n    };\n\n    this.loadCategories = () => {\n      Repository.fetchCategories().then(data => {\n        this.setState({\n          categories: data.data\n        });\n      });\n    };\n\n    this.deleteBook = id => {\n      Repository.deleteBook(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.addBook = (name, category, author, availableCopies) => {\n      Repository.addBook(name, category, author, availableCopies).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.getBook = id => {\n      Repository.getBook(id).then(data => {\n        this.setState({\n          selectedBook: data.data\n        });\n      });\n    };\n\n    this.editBook = (id, name, category, author, availableCopies) => {\n      Repository.editBook(id, name, category, author, availableCopies).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.getBookCopy = id => {\n      Repository.getBookCopy(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.addBookCopy = id => {\n      Repository.addBookCopy(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.state = {\n      books: [],\n      authors: [],\n      countries: [],\n      categories: [],\n      selectedBook: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n    this.loadAuthors();\n    this.loadCountries();\n    this.loadCategories();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/categories\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Categories, {\n              categories: this.state.categories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/authors\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Authors, {\n              authors: this.state.authors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/countries\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Countries, {\n              countries: this.state.countries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/add\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(BookAdd, {\n              authors: this.state.authors,\n              categories: this.state.categories,\n              onAddBook: this.addBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/edit/:id\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(BookEdit, {\n              authors: this.state.authors,\n              categories: this.state.categories,\n              onEditBook: this.editBook,\n              book: this.state.selectedBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: [\"/books\", \"/\"],\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Books, {\n              books: this.state.books,\n              onDelete: this.deleteBook,\n              onGetCopy: this.getBookCopy,\n              onAddCopy: this.addBookCopy,\n              onEdit: this.getBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/aleks/Downloads/lab2-frontend/src/components/App/App.js"],"names":["React","Component","Repository","BrowserRouter","Router","Redirect","Route","Header","Authors","Countries","Books","BookAdd","BookEdit","Categories","App","constructor","props","loadBooks","fetchBooks","then","data","setState","books","loadAuthors","fetchAuthors","authors","loadCountries","fetchCountries","countries","loadCategories","fetchCategories","categories","deleteBook","id","addBook","name","category","author","availableCopies","getBook","selectedBook","editBook","getBookCopy","addBookCopy","state","componentDidMount","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {Component} from \"react\";\nimport Repository from \"../../repository/repository\";\nimport {BrowserRouter as Router, Redirect , Route} from \"react-router-dom\";\nimport Header from '../Header/header';\nimport Authors from '../Authors/authors';\nimport Countries from '../Countries/countries';\nimport Books from '../Books/BooksList/books';\nimport BookAdd from \"../Books/BooksAdd/bookAdd\";\nimport BookEdit from \"../Books/BooksEdit/bookEdit\";\nimport Categories from \"../Categories/categories\";\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      authors: [],\n      countries: [],\n      categories:[],\n      selectedBook: {}\n    }\n  }\n  loadBooks=()=>{\n    Repository.fetchBooks()\n        .then((data)=>{\n          this.setState({\n            books:data.data\n          })\n        });\n  }\n  loadAuthors=()=>{\n    Repository.fetchAuthors()\n        .then((data)=>{\n          this.setState({\n            authors:data.data\n          })\n        });\n  }\n  loadCountries=()=>{\n    Repository.fetchCountries()\n        .then((data)=>{\n          this.setState({\n            countries:data.data\n          })\n        });\n  }\n  loadCategories=()=>{\n    Repository.fetchCategories()\n        .then((data)=>{\n          this.setState({\n            categories:data.data\n          })\n        });\n  }\n  deleteBook = (id)=>{\n    Repository.deleteBook(id)\n        .then(()=>{\n          this.loadBooks();\n        })\n  }\n  addBook=(name,category,author,availableCopies)=>{\n    Repository.addBook(name,category,author,availableCopies)\n        .then(()=>{\n          this.loadBooks();\n        })\n  }\n  getBook=(id)=>{\n    Repository.getBook(id)\n        .then((data)=>{\n          this.setState({\n            selectedBook:data.data\n          })\n        })\n  }\n  editBook=(id,name,category,author,availableCopies)=>{\n    Repository.editBook(id,name,category,author,availableCopies)\n        .then(()=>{\n          this.loadBooks();\n        })\n  }\n  getBookCopy=(id)=>{\n    Repository.getBookCopy(id)\n        .then(()=>{\n          this.loadBooks();\n        })\n  }\n  addBookCopy=(id)=>{\n    Repository.addBookCopy(id)\n        .then(()=>{\n          this.loadBooks();\n        })\n  }\n\n  componentDidMount(){\n    this.loadBooks();\n    this.loadAuthors();\n    this.loadCountries();\n    this.loadCategories();\n  }\n  render() {\n    return(\n        <Router>\n          <Header/>\n          <main>\n            <div className=\"container\">\n              <Route path={\"/categories\"} exact render={()=>\n                  <Categories\n                      categories={this.state.categories}/>}/>\n              <Route path={\"/authors\"} exact render={()=>\n                  <Authors\n                      authors={this.state.authors}/>}/>\n              <Route path={\"/countries\"} exact render={()=>\n                  <Countries\n                      countries={this.state.countries}/>}/>\n              <Route path={\"/books/add\"} exact render={()=>\n                  <BookAdd\n                      authors={this.state.authors}\n                      categories={this.state.categories}\n                      onAddBook={this.addBook}/>}/>\n              <Route path={\"/books/edit/:id\"} exact render={()=>\n                  <BookEdit\n                      authors={this.state.authors}\n                      categories={this.state.categories}\n                      onEditBook={this.editBook}\n                      book={this.state.selectedBook}/>}/>\n              <Route path={[\"/books\",\"/\"]} exact render={()=>\n                  <Books\n                      books={this.state.books}\n                      onDelete={this.deleteBook}\n                      onGetCopy={this.getBookCopy}\n                      onAddCopy={this.addBookCopy}\n                      onEdit={this.getBook}/>}/>\n              <Redirect to={\"/\"}/>\n            </div>\n          </main>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}